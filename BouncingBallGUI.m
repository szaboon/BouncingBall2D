classdef BouncingBallGUI < handle

    properties
        x = linspace(0,20,1000);
        y;
        speed;
        count = 0;
        xPos; yPos;
        xVel; yVel;
        Amp1; Amp2; Amp3;
        Freq1; Freq2; Freq3;
        Phase1; Phase2; Phase3;
        p1; p2; p3; p4;
        fig; title; instr; ax;
        sld1; sld2; sld3;  sld4;  sld5; sld6; sld7; sld8; sld9;
        section_lbl; section1_lbl; section2_lbl; section3_lbl;
        edit1; edit2; edit3; edit4; edit5; edit6;
        edit7; edit8; edit9; edit10; edit15;
        edit1_lbl; edit2_lbl; edit3_lbl; edit4_lbl;edit11_lbl;
        edit22_lbl; edit33_lbl; edit44_lbl;edit5_lbl; edit6_lbl;
        edit7_lbl; edit8_lbl; edit9_lbl; edit10_lbl; edit15_lbl; 
        Bounces; Time; 
        btn1; btn2;
        endedOn;
        endTime;
        Style;
    end
    
    methods
        function obj = BouncingBallGUI()
%% Figure
            obj.fig = uifigure('Name','Bouncing Ball 2D',...
                               'Position',[340 80 880 710],...
                               'Color','#ffa500');
            obj.Style = uilabel(obj.fig,...
                                'Text',' ',...
                                'BackgroundColor','#ffd589',...
                                'Position',[50 125 300 275]);
%% Instructions
            obj.title = uilabel(obj.fig,...
                                'Text','Instructions:',...
                                'FontSize',16,...
                                'Position',[60 100 100 22]);
            obj.instr = uitextarea(obj.fig,...
                                'Value',...
                                {'1. Adjust the ground with sliders however you like.';...
                                 '2. Set initial position and velocity of the ball.';...
                                 '3. You can also change properties of the ball and enviroment.';...
                                 '4. Run simulation by clicking on "Simulate" button.';...
                                 '5. Simulation will run until ball reaches "Max Bounces" or "Max Time"';...
                                 '   or when the ball will leave the field.';...
                                 '6. You can STOP the simulation using "Stop" button.';...
                                 '';...
                                 'NOTE: if the simulation is lagy try to Restart Matlab.';...
                                 'If the ball passes through the ground you need to reduce max step size in ode "Options".';...
                                 'You can also uncomment some lines of code to display more information.'},...
                                'FontSize',13,...
                                'Editable','off',...
                                'Position',[57 10 450 90]);
%% Plot
            obj.ax = uiaxes(obj.fig,...
                            'Position',[25 300 800 400],...
                            'XGrid','on',...
                            'YGrid','on',...
                            'NextPlot','add',...
                            'BackgroundColor','#ffa500');
            obj.ax.XLabel.String = 'x';
            obj.ax.XLabel.FontSize = 10;
            obj.ax.YLabel.String = 'y';
            obj.ax.YLabel.FontSize = 10;
            
%% Sliders
            obj.section_lbl = uilabel(obj.fig,...
                                  'Text','Ground adjustments',...
                                  'FontSize',16,...
                                  'Position',[130 270 150 22]);
            obj.sld1 = uislider(obj.fig,...
                               'Position',[60 240 80 3],...
                               'Limits',[-1 1],...
                               'Value', 0.97,...
                               'ValueChangedFcn',@obj.setGround,...
                               'MajorTicks',[-1 -0.5 0 0.5 1]);
            obj.sld2 = uislider(obj.fig,...
                               'Position',[60 200 80 3],...
                               'Limits',[-1 1],...
                               'Value', 0.5,...
                               'ValueChangedFcn',@obj.setGround,...
                               'MajorTicks',[-1 -0.5 0 0.5 1]);
            obj.sld3 = uislider(obj.fig,...
                               'Position',[60 160 80 3],...
                               'Limits',[-1 1],...
                               'Value', 0.1,...
                               'ValueChangedFcn',@obj.setGround,...
                               'MajorTicks',[-1 -0.5 0 0.5 1]);
            obj.section1_lbl = uilabel(obj.fig,...
                                  'Text','Amplitude',...
                                  'Position',[70 250 100 22]);
            obj.sld4 = uislider(obj.fig,...
                               'Position',[160 240 80 3],...
                               'Limits',[0 1],...
                               'Value', 0.4,...
                               'ValueChangedFcn',@obj.setGround,...
                               'MajorTicks',[0 0.25 0.5 0.75 1],...
                               'MajorTickLabels',{'0' '.25' '.5' '.75' '1'});
            obj.sld5 = uislider(obj.fig,...
                               'Position',[160 200 80 3],...
                               'Limits',[0 2],...
                               'Value', 1.6,...
                               'ValueChangedFcn',@obj.setGround,...
                               'MajorTicks',[0 0.5 1 1.5 2]);
            obj.sld6 = uislider(obj.fig,...
                               'Position',[160 160 80 3],...
                               'Limits',[0 4],...
                               'Value', 3,...
                               'ValueChangedFcn',@obj.setGround,...
                               'MajorTicks',[0 1 2 3 4]);
            obj.section2_lbl = uilabel(obj.fig,...
                                  'Text','Frequency',...
                                  'Position',[170 250 100 22]);
            obj.sld7 = uislider(obj.fig,...
                               'Position',[260 240 80 3],...
                               'Limits',[0 pi],...
                               'Value', 0,...
                               'ValueChangedFcn',@obj.setGround,...
                               'MajorTicks',[0 pi/2 pi],...
                               'MajorTickLabels',{'0' 'pi/2' 'pi'});
            obj.sld8 = uislider(obj.fig,...
                               'Position',[260 200 80 3],...
                               'Limits',[0 pi],...
                               'Value', 0,...
                               'ValueChangedFcn',@obj.setGround,...
                               'MajorTicks',[0 pi/2 pi],...
                               'MajorTickLabels',{'0' 'pi/2' 'pi'});
            obj.sld9 = uislider(obj.fig,...
                               'Position',[260 160 80 3],...
                               'Limits',[0 pi],...
                               'Value', 0,...
                               'ValueChangedFcn',@obj.setGround,...
                               'MajorTicks',[0 pi/2 pi],...
                               'MajorTickLabels',{'0' 'pi/2' 'pi'});
           obj.section3_lbl = uilabel(obj.fig,...
                                  'Text','Phase',...
                                  'Position',[280 250 100 22]);
                              
%% Edit fields                                 
            obj.edit1 = uieditfield(obj.fig,...
                                    'Position',[410 250 40 22],...
                                    'Value','6');
            obj.edit1_lbl = uilabel(obj.fig,...
                                    'Text','x =',...
                                    'Position',[390 250 20 22]);
            obj.edit11_lbl = uilabel(obj.fig,...
                                    'Text','Ball position x:',...
                                    'Position',[390 270 150 22]);
                                
            obj.edit2 = uieditfield(obj.fig,...
                                    'Position',[410 210 40 22],...
                                    'Value','4');
            obj.edit2_lbl = uilabel(obj.fig,...
                                    'Text','y =',...
                                    'Position',[390 210 20 22]);
            obj.edit22_lbl = uilabel(obj.fig,...
                                    'Text','Ball position y:',...
                                    'Position',[390 230 150 22]);
                                
            obj.edit3 = uieditfield(obj.fig,...
                                    'Position',[410 170 40 22],...
                                    'Value','10');
            obj.edit3_lbl = uilabel(obj.fig,...
                                    'Text','vx =',...
                                    'Position',[385 170 25 22]);
            obj.edit33_lbl = uilabel(obj.fig,...
                                    'Text','Horizontal velocity:',...
                                    'Position',[390 190 150 22]);
                                
            obj.edit4 = uieditfield(obj.fig,...
                                    'Position',[410 130 40 22],...
                                    'Value','0');
            obj.edit4_lbl = uilabel(obj.fig,...
                                    'Text','vy =',...
                                    'Position',[385 130 25 22]);
            obj.edit44_lbl = uilabel(obj.fig,...
                                    'Text','Vertical velocity:',...
                                    'Position',[390 150 150 22]);
                                
            obj.edit5 = uieditfield(obj.fig,...
                                    'Position',[530 250 40 22],...
                                    'Value','0.95');
            obj.edit5_lbl = uilabel(obj.fig,...
                                    'Text','Restitution coefficient:',...
                                    'Position',[530 270 150 22]);
                                
            obj.edit6 = uieditfield(obj.fig,...
                                    'Position',[530 210 40 22],...
                                    'Value','1');
            obj.edit6_lbl = uilabel(obj.fig,...
                                    'Text','Mass of the Ball:',...
                                    'Position',[530 230 150 22]);
                                
            obj.edit7 = uieditfield(obj.fig,...
                                    'Position',[530 170 40 22],...
                                    'Value','0.02');
            obj.edit7_lbl = uilabel(obj.fig,...
                                    'Text','Drag coefficient:',...
                                    'Position',[530 190 150 22]);
                                
            obj.edit8 = uieditfield(obj.fig,...
                                    'Position',[530 130 40 22],...
                                    'Value','9.81');
            obj.edit8_lbl = uilabel(obj.fig,...
                                    'Text','Gravitational acceleration:',...
                                    'Position',[530 150 150 22]);
                                
            obj.edit9 = uieditfield(obj.fig,...
                                    'Position',[700 250 40 22],...
                                    'Value','10');
            obj.edit9_lbl = uilabel(obj.fig,...
                                    'Text','Max Bounces:',...
                                    'Position',[700 270 100 22]);
            
            obj.edit10 = uieditfield(obj.fig,...
                                    'Position',[700 210 40 22],...
                                    'Value','20');
            obj.edit10_lbl = uilabel(obj.fig,...
                                    'Text','Max Time: [s]',...
                                    'Position',[700 230 100 22]);
            
            obj.edit15 = uieditfield(obj.fig,...
                                    'Position',[700 170 40 22],...
                                    'Value','1');
            obj.edit15_lbl = uilabel(obj.fig,...
                                    'Text','Slow motion',...
                                    'Position',[700 190 100 22]);
                                
%% Buttons
            obj.btn1 = uibutton(obj.fig,...
                               'Text','Set and Clear',...
                               'Position',[690 125 100 30],...
                               'Enable','on',...
                               'ButtonPushedFcn',@obj.setGround);
            obj.btn2 = uibutton(obj.fig,...
                               'Text','Simulate',...
                               'Position',[550 35 120 50],...
                               'FontSize',16,...
                               'BackgroundColor','#00cc00',...
                               'ButtonPushedFcn',@obj.main);
            obj.btn1 = uibutton(obj.fig,...
                               'Text','Stop',...
                               'Position',[700 35 120 50],...
                               'FontSize',16,...
                               'BackgroundColor','red',...
                               'ButtonPushedFcn',@obj.ButtonStop);
%% Display   
            obj.Time = uilabel(obj.fig,...
                                    'Text',' ',...
                                    'Position',[800 230 100 22]);
            obj.Bounces = uilabel(obj.fig,...
                                    'Text',' ',...
                                    'Position',[800 270 100 22]);
            obj.endedOn = uilabel(obj.fig,...
                                    'Text',' ',...
                                    'Position',[550 90 250 22]);
                                             
        obj.setGround;
        end
%% Main       
        function main(obj,~,~)
        obj.setGround;
        obj.endedOn.Text = ' ';
        e = str2double(char(obj.edit5.Value));   %Coeficient of restitution
        maxBounces = str2double(char(obj.edit9.Value));  %Max Bounces
        maxTime = str2double(char(obj.edit10.Value));   %Max Time

        obj.xPos = str2double(char(obj.edit1.Value));  
        obj.yPos = str2double(char(obj.edit2.Value));
        obj.xVel = str2double(char(obj.edit3.Value));
        obj.yVel = str2double(char(obj.edit4.Value));

        InitCond = [obj.xPos;obj.yPos;obj.xVel;obj.yVel]; %Initial condition of the ball

        Options = odeset(  'RelTol',1e-6,...
                           'AbsTol', 1e-6,...
                           'Events', @obj.bounceEvents,...
                           'Vectorized',true,...
                           'MaxStep',0.1);

        Trajectory = cell(maxBounces,1); %Results of the simulation are stored here  
        tNow = 0;
        for bounceNum=1:maxBounces+1

        Tspan = [tNow,maxTime];
        sol = ode45(@obj.BallDynamics,Tspan,InitCond,Options);

        stateIn = sol.y(:,end);

        posOut = stateIn(1:2,:);    %Position not affected by the collision
        velIn = stateIn(3:4,:);     %The velocity before colision
        horizPos = stateIn(1,:);    %Horizontal position of the collision

        groundSlope = obj.Amp1*obj.Freq1*cos(obj.Freq1*horizPos+obj.Phase1)+...   %Slope of the ground
                      obj.Amp2*obj.Freq2*cos(obj.Freq2*horizPos+obj.Phase2)+...
                      obj.Amp3*obj.Freq3*cos(obj.Freq3*horizPos+obj.Phase3);

        theta = atan2(groundSlope,1);  %Angle between the horizontal axis and the tangent to the ground

        Rot = [cos(theta) sin(theta);    %Rotates the velocity vectors and alignes it with tangent to the ground
              -sin(theta) cos(theta)];

        E = [1  0;       %affects only vertical velocity with the resustitation coefficient when vectors are aligned
             0 -e];
         
        velNT = E*(Rot*velIn);  %Normal and Tangenial velocity components
        velOut = Rot\velNT;     %Rotates velocity back
        InitCond = [posOut;velOut]; %Sets new initial condition

        tNow = sol.x(end);
        Trajectory{bounceNum}=sol;
            if maxTime <= tNow
                obj.endedOn.Text = 'Simulation ended on Max Time.';
                    break;
            elseif (horizPos<0 || horizPos>20)
                obj.endedOn.Text = 'Ball will leave the field.';
            elseif (bounceNum==maxBounces)
                obj.endedOn.Text = 'Simulation ended on Max Bounces.';
            elseif (obj.speed<0.5)
                obj.endedOn.Text = 'Simulation ended because ball started rolling';
                    break;
            end
        end
        
        Trajectory = Trajectory(1:bounceNum);
        timeAll = [];
        stateAll = [];

        for i=1:length(Trajectory)

            dt = 0.005;
            tStart = Trajectory{i}.x(1);
            tFinal = Trajectory{i}.x(end);
            time = linspace(tStart,tFinal,round((tFinal-tStart)/dt));

            if ~isempty(time)
                state = deval(Trajectory{i},time);
            end  
            timeAll = [timeAll, time];      %#ok<AGROW>
            stateAll = [stateAll, state];   %#ok<AGROW>
        end

        XPos = stateAll(1,:);
        YPos = stateAll(2,:);
        Pos = [XPos;YPos];
        
        tic;  %starts time

        obj.endTime = timeAll(end);
        SlowMo = str2double(char(obj.edit15.Value));
        cpuTime = toc/SlowMo;
        counter = 1;
%         b = 2;               %for Bounce counter 
        while (cpuTime<obj.endTime) %function ButtonsStop will set endTime to 0 and break while

            cpuTime = toc/SlowMo;
            while (timeAll(counter)<cpuTime) && counter<length(timeAll)
                counter=counter+1;
            end
            PosNow = Pos(:,counter);
            

            if (PosNow(1)>20 || PosNow(1)<0)
                obj.endedOn.Text = 'Ball left the field';
                pause(0.5)
                obj.setGround
                break;
            elseif (PosNow(2)<min(obj.y))
                obj.endedOn.Text = 'Ball passed through the ground';
                pause(1)
                obj.setGround
                break;
            end
            delete(obj.p2);
            delete(obj.p3);
            obj.p3 = plot(obj.ax,PosNow(1),PosNow(2),'b.','MarkerSize',30);

%% This would display time during simulation(SLOWING DOWN THE SIMULATION!!!)           
%  obj.Time.Text = ' ';
%  obj.Time.Text = num2str(cpuTime);

%% This would count and display number of bounces during simulation(SLOWING DOWN THE SIMULATION!!!) + uncomment "b" before while           
%if (round(Trajectory{b}.y(1))==round(PosNow(1)))
%    b=b+1;
%    obj.Bounces.Text = ' ';
%    coun = b-2;
%    obj.Bounces.Text = num2str(coun);
%end

%% Direction plot (SLOWING DOWN THE SIMULATION!!!) 
%             obj.p4 = plot(obj.ax,Pos(1,1:counter),Pos(2,1:counter),'b--','LineWidth',max(2,1));
%% 
            drawnow; 
            pause(0.001);
        end
        end
%% Set Ground function
        function setGround(obj,~,~)
            obj.ButtonStop;
            obj.count = obj.count+1;
            obj.xPos = str2double(char(obj.edit1.Value));
            obj.yPos = str2double(char(obj.edit2.Value));
            
            %Sin waves parameters
            obj.Amp1 = obj.sld1.Value;
            obj.Freq1 = obj.sld4.Value;
            obj.Phase1 = obj.sld7.Value;

            obj.Amp2 = obj.sld2.Value;
            obj.Freq2 = obj.sld5.Value;
            obj.Phase2 = obj.sld8.Value;

            obj.Amp3 = obj.sld3.Value;
            obj.Freq3 = obj.sld6.Value;
            obj.Phase3 = obj.sld9.Value;

            obj.y = obj.Amp1*sin(obj.Freq1*obj.x+obj.Phase1)+...
                    obj.Amp2*sin(obj.Freq2*obj.x+obj.Phase2)+...
                    obj.Amp3*sin(obj.Freq3*obj.x+obj.Phase3);

            cla(obj.ax);    %Clears plot
            obj.p1 = plot(obj.ax,obj.x,obj.y,'k-','LineWidth',3);
            obj.p2 = plot(obj.ax,obj.xPos,obj.yPos,'b.','MarkerSize',30); 
            obj.ax.XLim = [0 20];
            obj.ax.YLim = [-3 7];
        
        end
%% Ball dynamics function
        function dX = BallDynamics(obj,~,X)
            g = str2double(char(obj.edit8.Value));    %Gravitational acceleration
            m = str2double(char(obj.edit6.Value));    %Mass of the ball
            c = str2double(char(obj.edit7.Value));    %Drag coefficient
            
            vel = X(3:4,:);
            
            obj.speed = sqrt(vel(1,:).^2+vel(2,:).^2);      %(m/s) scalar speed
            Drag = -c*vel.*obj.speed/m;                     %(m/s^2) quadratic drag
            Gravity = [0;-g]*ones(size(obj.speed));         %(m/s^2) gravitational acceleration

            acc = Drag + Gravity;
            dX = [vel;acc];
        end
%% Bounce Events function
        function [value,isterminal,direction] = bounceEvents(obj,~,X)
            xvalue = X(1,:);
            yvalue = X(2,:);

            ground = obj.Amp1*sin(obj.Freq1*xvalue+obj.Phase1)+...
                     obj.Amp2*sin(obj.Freq2*xvalue+obj.Phase2)+...
                     obj.Amp3*sin(obj.Freq3*xvalue+obj.Phase3);

            value = yvalue-ground;  % Detect height of the ball = ground
            isterminal = true;      % Stop the integration
            direction = -1;         % Negative direction only
        end
%% Button Stop function
        function ButtonStop(obj,~,~)
            obj.endedOn.Text = ' ';
            obj.endTime = 0;
        end
%% End of Methods
    end
end
